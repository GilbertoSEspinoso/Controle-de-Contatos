@using ControleDeContato.Enums
@model ChangePasswordModel
@{
    ViewData["Title"] = "Alterar Senha do Usuário";
}

<div class="text-center">
    <h1 class="display-4">@ViewData["Title"]</h1>
</div>


@if (TempData["MensagemSucesso"] != null)
{
    <div class="alert alert-success" role="alert">
        <button type="button" class="btn btn-danger btn-sm close-alert" aria-label="Close">X</button>
        @TempData["MensagemSucesso"]
    </div>
}
@if (TempData["MensagemError"] != null)
{
    <div class="alert alert-danger" role="alert">
        <button type="button" class="btn btn-danger btn-sm close-alert" aria-label="Close">X</button>
        @TempData["MensagemError"]
    </div>
}


<form asp-controler="ChangePassword" asp-action="Change" method="post">


    <div class="form-group">
        <label for="currentPassword" class="form-label">Senha atual</label>
        <input type="password" asp-for="CurrentPassword" class="form-control" placeholder="Digite a senha atual do usuário">
        @Html.ValidationMessageFor(x => x.CurrentPassword)
    </div>

    <div class="form-group">
        <label for="newPassword" class="form-label">Nova senha</label>
        <input type="password" asp-for="NewPassword" class="form-control" placeholder="Digite a nova senha do usuário">
        @Html.ValidationMessageFor(x => x.NewPassword)
    </div>

    <div class="form-group">
        <label for="confirmNewPassword" class="form-label">Confirmar a senha</label>
        <input type="password" asp-for="ConfirmNewPassword" class="form-control" placeholder="Confirme a nova senha do usuário">
        @Html.ValidationMessageFor(x => x.ConfirmNewPassword)
    </div>




    <button type="submit" class="btn gradient-custom text-light btn-block">SALVAR</button>
    <a class="btn btn-secondary btn-block" asp-controller="Home" asp-action="Index" role="button">CANCELAR</a>

</form>

